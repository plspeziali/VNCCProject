version: '3.8'
services:

  webserver:
    build:
      context: ./webserver/app/
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - db

  predictor:
    build:
      context: ./predictor/app/
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    networks:
      - app-network
    volumes:
      - model-data:/app/data

  training:
    build:
      context: ./training/app/
      dockerfile: ./Dockerfile
    ports:
      - "3002:3002"
    networks:
      - app-network
    depends_on:
      - db
    volumes:
      - model-data:/app/data

  inserter:
    build:
      context: ./inserter/app/
      dockerfile: ./Dockerfile
    ports:
      - "3001:3001"
    networks:
      - app-network
    depends_on:
      - db

  initializer:
    build:
      context: ./initializer/app/
      dockerfile: ./Dockerfile
    networks:
      - app-network
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: body-performance
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./initializer/app/bodyPerformance.csv:/tmp/bodyPerformance.csv
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_DEFAULT_SERVER: db
      PGADMIN_DEFAULT_SERVER_PORT: 5432
      PGADMIN_SKIP_FIRST_LOGIN: 'True'
    ports:
      - "8081:80"
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  model-data:
